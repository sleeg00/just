

plugins {
	id 'org.springframework.boot' version '2.7.7'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'java'
}

jar {
	enabled = false;
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = '11'
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

ext {
	set('springCloudVersion', "2022.0.1")
}
repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'


// queryDSL 설정
	implementation "com.querydsl:querydsl-jpa"
	implementation "com.querydsl:querydsl-core"
	implementation "com.querydsl:querydsl-collections"
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa" // querydsl JPAAnnotationProcessor 사용 지정
	annotationProcessor "jakarta.annotation:jakarta.annotation-api" // java.lang.NoClassDefFoundError (javax.annotation.Generated) 대응 코드
	annotationProcessor "jakarta.persistence:jakarta.persistence-api" // java.lang.NoClassDefFoundError (javax.annotation.Entity) 대응 코드


	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	//Database
	implementation 'mysql:mysql-connector-java:8.0.27'
	runtimeOnly  'mysql:mysql-connector-java:8.0.27'
	implementation 'com.h2database:h2'
	runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
	runtimeOnly 'com.h2database:h2'


	//Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.platform:junit-platform-launcher:1.5.2'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.5.2'

	//jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'com.auth0:java-jwt:4.2.1'
	implementation 'com.nimbusds:nimbus-jose-jwt:3.10'

	//security
	implementation 'org.springframework.security:spring-security-core:5.6.0'
	implementation 'org.springframework.security:spring-security-config:5.5.0'
	implementation 'org.springframework.security:spring-security-oauth2-client'

	//json
	dependencies { implementation 'com.google.code.gson:gson:2.8.6' }
	implementation 'org.bouncycastle:bcprov-jdk15on:1.69'

	//Mapper
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	//jooq
	implementation 'org.jooq:jooq:3.15.3'
	implementation 'org.jooq:jooq-meta:3.15.3'
	implementation 'org.jooq:jooq-codegen:3.15.3'

	//ElasticSearch
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
	//Swagger
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'

	//AmaZon
	implementation 'software.amazon.awssdk:s3:2.20.68'
	implementation 'io.github.flashvayne:chatgpt-spring-boot-starter:1.0.4'

	//logstash
	implementation 'net.logstash.logback:logstash-logback-encoder:7.3'

}
tasks.named('test') {
	useJUnitPlatform()
}

// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
	options.compilerArgs << "-Xlint:unchecked"
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
	main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file(generated)
}
